var _user$project$Main$tuplesExam = function () {
	var something = {ctor: '_Tuple2', _0: true, _1: ' Message:'};
	return _elm_lang$core$Tuple$first(something) ? A2(
		_elm_lang$core$Basics_ops['++'],
		'Success',
		_elm_lang$core$Tuple$second(something)) : A2(
		_elm_lang$core$Basics_ops['++'],
		'Failed',
		_elm_lang$core$Tuple$second(something));
}();
var _user$project$Main$funcyNum = function () {
	var num = {
		ctor: '::',
		_0: 1,
		_1: {
			ctor: '::',
			_0: 2,
			_1: {
				ctor: '::',
				_0: 3,
				_1: {
					ctor: '::',
					_0: 4,
					_1: {ctor: '[]'}
				}
			}
		}
	};
	return _elm_lang$core$Basics$toString(
		_elm_lang$core$List$reverse(num));
}();
var _user$project$Main$sum = function (number) {
	return number + 200;
};
var _user$project$Main$divide = F2(
	function (first, second) {
		return _elm_lang$core$Basics$toString(first / second);
	});
var _user$project$Main$main = _elm_lang$virtual_dom$Native_VirtualDom.staticProgram(
	_elm_lang$html$Html$text(_user$project$Main$tuplesExam));
